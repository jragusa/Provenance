setwd("~/UniGE/Git/Provenance_analysis/R")
volcanic <- read.csv("data/QAP_Volcanic.csv", header = TRUE, comment.char = "#")
View(volcanic)
igenous <- read.csv("data/QAP_Igneous.csv", header = TRUE, comment.char = "#")
View(igenous)
library(ggtern)
library(plyr)
library(grid)
col.igneous <- c("Quartzolite" = "#cfcfcf",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#d5ea8f",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#bfd485",
"Quartz diorite / Quartz gabbro" = "#bfd080",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#87ad70",
"Monzodiorite / Monzogabbro" = "#8fad7b",
"Diorite / Gabbro" = "#9bac68")
df_source <- igenous
# Put tile labels at the midpoint of each tile ####
LAB <- NULL
LAB = ddply(df_source, 'Label', function(df) {
apply(df[, 1:3], 2, mean)
})
# Tweak for adjust orientation of tectonic settings ####
LAB$Angle = 0
LAB$Angle[which(LAB$Label == 'Basement Uplift')] = -35
# QmFLt ternary diagram
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Qm, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Qm, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
col.igneous <- c("Quartzolite" = "#cfcfcf",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#d5ea8f",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#bfd485",
"Quartz diorite / Quartz gabbro" = "#bfd080",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#2d937b",
"Monzodiorite / Monzogabbro" = "#8fad7b",
"Diorite / Gabbro" = "#9bac68")
# Put tile labels at the midpoint of each tile ####
LAB <- NULL
LAB = ddply(df_source, 'Label', function(df) {
apply(df[, 1:3], 2, mean)
})
# Tweak for adjust orientation of tectonic settings ####
LAB$Angle = 0
LAB$Angle[which(LAB$Label == 'Basement Uplift')] = -35
# QmFLt ternary diagram
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
col.igneous <- c("Quartzolite" = "#cfcfcf",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#cde48c",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#bfd485",
"Quartz diorite / Quartz gabbro" = "#c2d383",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#2d937b",
"Monzodiorite / Monzogabbro" = "#89b16b",
"Diorite / Gabbro" = "#9ea66d")
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
col.igneous <- c("Quartzolite" = "#cfcfcf",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#cde48c",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#b3d19f",
"Quartz diorite / Quartz gabbro" = "#c2d383",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#2d937b",
"Monzodiorite / Monzogabbro" = "#89b16b",
"Diorite / Gabbro" = "#9ea66d")
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
col.igneous <- c("Quartzolite" = "#d1d1d1",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#cde48c",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#b3d19f",
"Quartz diorite / Quartz gabbro" = "#c2d383",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#2d937b",
"Monzodiorite / Monzogabbro" = "#89b16b",
"Diorite / Gabbro" = "#9ea66d")
ernary diagram
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
col.igneous <- c("Quartzolite" = "#d1d1d1",
"Quartz-rich granitoid" = "#b6b6b6",
"Alkali-feldspar granite" = "#c5aacd",
"Syeno-granite" = "#b2d9e8",
"Monzo-granite" = "#b2d9e8",
"Grano-diorite" = "#d7ebba",
"Tonalite" = "#cde48c",
"Alkali-feldspar quartz syenite" = "#b982b9",
"Quartz syenite" = "#7dc6e6",
"Quartz monzonite" = "#3ab797",
"Quartz monzodiorite / Quartz monzogabbro" = "#b3d19f",
"Quartz diorite / Quartz gabbro" = "#c2d383",
"Alkali-feldspar syenite" = "#8c5da1",
"Syenite" = "#18aee3",
"Monzonite" = "#2d937b",
"Monzodiorite / Monzogabbro" = "#89b16b",
"Diorite / Gabbro" = "#9ea66d")
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
df_source <- volcanic
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
volcanic <- read.csv("data/QAP_Volcanic.csv", header = TRUE, comment.char = "#")
View(volcanic)
col.volcanic <- c("Alkali-rhyolite" = "#c5aacd",
"Rhyolite" = "#b2d9e8",
"Rhyo-dacite" = "#b2d9e8",
"Dacite" = "#d7ebba",
"Quartz andesite" = "#cde48c",
"Alkali quartz trachyte" = "#b982b9",
"Quartz trachyte" = "#7dc6e6",
"Quartz latite" = "#3ab797",
"Andesite" = "#b3d19f",
"Alkali-trachyte" = "#8c5da1",
"Trachyte" = "#18aee3",
"Latite" = "#2d937b",
"Latite / basalt" = "#89b16b",
"Basalt" = "#9ea66d")
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.igneous) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.volcanic) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
volcanic <- read.csv("data/QAP_Volcanic.csv", header = TRUE, comment.char = "#")
df_source <- volcanic
col.volcanic <- c("Alkali-rhyolite" = "#c5aacd",
"Rhyolite" = "#b2d9e8",
"Rhyo-dacite" = "#b2d9e8",
"Dacite" = "#d7ebba",
"Quartz andesite" = "#cde48c",
"Alkali quartz trachyte" = "#b982b9",
"Quartz trachyte" = "#7dc6e6",
"Quartz latite" = "#3ab797",
"Andesite" = "#b3d19f",
"Alkali-trachyte" = "#8c5da1",
"Trachyte" = "#18aee3",
"Latite" = "#2d937b",
"Latite / basalt" = "#89b16b",
"Basalt" = "#9ea66d")
# Put tile labels at the midpoint of each tile ####
LAB <- NULL
LAB = ddply(df_source, 'Label', function(df) {
apply(df[, 1:3], 2, mean)
})
# Tweak for adjust orientation of tectonic settings ####
LAB$Angle = 0
LAB$Angle[which(LAB$Label == 'Basement Uplift')] = -35
# QmFLt ternary diagram
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Q, x=A, z=P, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
# Add colours
scale_fill_manual(values = col.volcanic) +
# Add labels
geom_text(data = LAB,
aes(y=Q, x=A, z=P, label = Label, angle = Angle),
color = 'black',
size = 3.5)
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
+
# Add labels
geom_text(data = LAB,
aes(y=Ol, x=Opx, z=Cpx, label = Label, angle = Angle),
color = 'black',
size = 3.5)
# Put tile labels at the midpoint of each tile ####
LAB <- NULL
LAB = ddply(df_source, 'Label', function(df) {
apply(df[, 1:3], 2, mean)
})
# Tweak for adjust orientation of tectonic settings ####
LAB$Angle = 0
LAB$Angle[which(LAB$Label == 'Basement Uplift')] = -35
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black') +
geom_text(data = LAB,
aes(y=Ol, x=Opx, z=Cpx, label = Label, angle = Angle),
color = 'black',
size = 3.5)
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
peridotite <- read.csv("data/Mafic_Peridotite.csv", header = TRUE, comment.char = "#")
df_source <- peridotite
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ol, x=Opx, z=Cpx, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
pyroxene <- read.csv("data/Single_Pyroxene.csv", header = TRUE, comment.char = "#")
df_source <- pyroxene
# Put tile labels at the midpoint of each tile ####
LAB <- NULL
LAB = ddply(df_source, 'Label', function(df) {
apply(df[, 1:3], 2, mean)
})
# Tweak for adjust orientation of tectonic settings ####
LAB$Angle = 0
LAB$Angle[which(LAB$Label == 'Basement Uplift')] = -35
ggtern() +
# Draw polygons
geom_polygon(data = df_source,
aes(y=Ca, x=Mg, z=Fe, color = Label, fill = Label),
alpha = 0.75,
size = 0.5,
color = 'black') +
geom_polygon(color='black')
library(ggtern)
library(plyr)
library(grid)
lines <- read.csv("/home/jeremy/UniGE/Git/R/ternary_lines.csv", header = TRUE, comment.char = "#")
test <- subset(lines,type="QAP")
test
test <- subset(lines,type=QAP)
test
test <- subset(lines,type=="QAP")
test
View(test)
